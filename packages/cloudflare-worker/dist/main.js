!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){const r=n(1),{determineRouting:o}=n(2);addEventListener("fetch",e=>{e.passThroughOnException(),o(e.request.url)?e.respondWith(async function(e){const{response:t,har:n}=await r.fetchAndCollect(e.request);return e.waitUntil(r.metrics("API_KEY",{id:t.headers.get("x-readme-id"),label:t.headers.get("x-readme-label")},e.request,n)),t}(e)):e.respondWith(fetch(e.request))})},function(e,t,n){let r="node";try{r="1.1.0"}catch(e){}let o="http://localhost";try{o="https://metrics.readme.io"}catch(e){}function a(...e){console.log(...e)}e.exports.fetchAndCollect=async function(e){a(`Readme CloudFlare Worker v${r}`,"https://github.com/readmeio/cloudflare-worker");const t=new Date,{req:n,body:o}=await async function(e){if(e.method.match(/GET|HEAD/))return{req:e,body:null};const t=await e.text();return{req:new Request(e.url,{method:e.method,headers:e.headers,body:t}),body:t}}(e),s=await fetch(n),i=["x-readme-id","x-readme-label"],c=i.map(e=>!s.headers.has(e)&&e).filter(Boolean);if(c.length)throw new Error(`Missing headers on the response: ${c.join(", ")}`);const{res:u,body:l}=await async function(e){const t=await e.text();return{res:new Response(t,{status:e.status,statusText:e.statusText,headers:e.headers}),body:t}}(s);return{har:{log:{creator:{name:"@readme/cloudflare-worker",version:r},entries:[{startedDateTime:t.toISOString(),time:(new Date).getTime()-t.getTime(),request:{method:n.method,url:n.url,httpVersion:"1.1",headers:[...n.headers].map(([e,t])=>({name:e,value:t})),queryString:[...new URL(n.url).searchParams].map(([e,t])=>({name:e,value:t})),postData:{mimeType:n.headers.get("content-type")||"application/json",text:o}},response:{status:u.status,statusText:u.statusText,headers:[...u.headers].map(([e,t])=>({name:e,value:t})).filter(e=>-1===i.indexOf(e.name)),content:{text:l,size:l.length,mimeType:u.headers.get("content-type")||"application/json"}}}]}},response:u}},e.exports.metrics=function(e,t,n,r){return fetch(`${o}/v1/request`,{method:"POST",headers:{authorization:`Basic ${btoa(`${e}:`)}`,"content-type":"application/json"},body:JSON.stringify([{group:t,clientIPAddress:n.headers.get("cf-connecting-ip")||"0.0.0.0",request:r}])}).then(async e=>{a("Response from readme",e),a(await e.text())}).catch(e=>{throw console.error("Error saving log to readme",e),e})}},function(e,t){function n(e){return RegExp(/\*/g).test(e)}function r(e,t){return new RegExp(t,"gi").test(e)}t.determineRouting=(e=>{const{protocol:t,host:o,pathname:a}=new URL(e);return INSTALL_OPTIONS.ROUTES.map(e=>{const{protocol:s,host:i,pathname:c}=new URL(e),u=i.replace("%2A","*"),l=t===s;let d,p;if(n(u)){const e=u.split(/\*\./g)[1];d=new RegExp(".+?(?=.\\"+e+")","gi").test(o)}else d=r(o,u);if(n(c)){const[e]=c.replace(/\//g,"\\/").split(/\*/);p=new RegExp("(?="+e+")[^\\]]+","gi").test(a)}else(1===c.length&&1===a.length||c.length===a.length&&r(a,c))&&(p=!0);return l&&d&&p}).some(e=>e)})}]);