version: '3.4'

x-server-config: &server-config
  METRICS_SERVER: "http://host.docker.internal:8001"
  README_API_KEY: rdme_abcdefghijklmnopqrstuvwxyz

x-extra_hosts: &default-extra_hosts
  # Docker in Github doesn't automaticaly map these and without `host.docker.internal`
  # working our SDK HTTP servers can't talk to our mock Metrics server.
  - "host.docker.internal:host-gateway"

services:
  runner:
    container_name: runner
    image: node:16

  #
  # .NET
  #
  integration_metrics_dotnet_v6.0:
    build:
      context: .
      dockerfile: ./__tests__/integrations/dotnet.Dockerfile
    command: npm run test:integration-metrics
    environment:
      - EXAMPLE_SERVER=dotnet examples/net6.0/out/net6.0.dll

  integration_webhooks_dotnet_v6.0:
    build:
      context: .
      dockerfile: ./__tests__/integrations/dotnet.Dockerfile
    command: npm run test:integration-webhooks
    environment:
      - EXAMPLE_SERVER=dotnet examples/net6.0-webhook/out/net6.0-webhook.dll

  #
  # Node
  #
  integration_node_express:
    build:
      context: .
      dockerfile: ./__tests__/integrations/node/express.Dockerfile
    ports:
      - 8000:8000
    extra_hosts: *default-extra_hosts
    environment:
      <<: *server-config

  integration_node_fastify:
    build:
      context: .
      dockerfile: ./__tests__/integrations/node/fastify.Dockerfile
    ports:
      - 8000:8000
    extra_hosts: *default-extra_hosts
    environment:
      <<: *server-config

  integration_node_hapi:
    build:
      context: .
      dockerfile: ./__tests__/integrations/node/hapi.Dockerfile
    ports:
      - 8000:8000
    extra_hosts: *default-extra_hosts
    environment:
      <<: *server-config

  #
  # PHP
  #
  integration_php_laravel:
    build:
      context: .
      dockerfile: ./__tests__/integrations/php/laravel.Dockerfile
    ports:
      - 8000:8000
    extra_hosts: *default-extra_hosts
    environment:
      <<: *server-config

  #
  # Python
  #
  integration_metrics_python_django:
    build:
      context: .
      dockerfile: ./__tests__/integrations/python.Dockerfile
    command: npm run test:integration-metrics
    environment:
      - EXAMPLE_SERVER=python3 examples/metrics_django/manage.py runserver

  integration_metrics_python_flask:
    build:
      context: .
      dockerfile: ./__tests__/integrations/python.Dockerfile
    command: npm run test:integration-metrics
    environment:
      EXAMPLE_SERVER: python3 examples/flask/app.py
      DEBUG: 'true'

  integration_webhooks_python_flask:
    build:
      context: .
      dockerfile: ./__tests__/integrations/python.Dockerfile
    command: npm run test:integration-webhooks
    environment:
      - EXAMPLE_SERVER=python3 examples/flask/webhooks.py
